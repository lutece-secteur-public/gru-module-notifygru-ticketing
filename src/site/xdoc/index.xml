<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>       
          Module NotifyGru Ticketing : Provider (module) of NotifyGru module 
           
        </title>
    </properties>
    <body>
        <section name="Module NotifyGru Ticketing">
           
             <subsection name="Introduction">
            The resource provider (ticket) NotifyGru Ticketing is the link between the NotifyGru task and ticketing plugin..
             Indeed, NotifyGru is designed to work with any implementation of the abstract class
             <code>fr.paris.lutece.plugins.workflow.modules.notifygru.service.AbstractServiceProvider</code> Itself implements the interface
             <code>fr.paris.lutece.plugins.workflow.modules.notifygru.service.IProvider</code> which defines the basic methods of providers.
          </subsection>
           
            <subsection name="Implémentation">
                <p>icketing Module NotifyGru is implemented resource provider, that is to say that only one instance of this implementation allows to provide all information on ticketing plugin.
                  This has the consequence of having a property value <code>managerProvider</code>always<code>FALSE</code>
                 to indicate that we have a unique instance of this service</p>
             
             <p>In the context file, we like reporting BEAN :
           <code>   <bean id="notifygru-ticketing.ProviderService" class="fr.paris.lutece.plugins.notifygru.modules.ticketing.NotifyGruTicketing"
 		p:key="notifygru-ticketing.ProviderService"
 		p:titleI18nKey="module.notifygru.ticketing.module.providerticketing"
                p:beanName="notifygru-ticketing.ProviderService"   
                 p:managerProvider="false"           
            /></code>            
            </p>
            
            </subsection>
            
            
            
            <subsection name="Configuration">
                    <p>The method <code>  public int getOptionalDemandIdType( int nIdResourceHistory );</code> reference the identifier of the application type configured by a mapping system
                     in the properties file :
                    <code>
workflow-ticketing.demandType.ticketType.1=101
workflow-ticketing.demandType.ticketType.2=102
workflow-ticketing.demandType.ticketType.3=103
workflow-ticketing.demandType.ticketType.4=104
</code></p>
                    
              
      
<p></p>
    
 
            </subsection>
            
            <subsection name="Provider use">
                <p>When the task is originally created and the selected provider, the instance of the latter gives the information available via bookmarks..
                 These bookmarks can be used to set messages or objects of different tabs :  </p>
                <ul>
           
<li>Civility 	${civility}</li>
<li>First name 	${firstname}</li>
<li>Name 	${lastname}</li>
<li>Référence 	${reference}</li>
<li>Reference 	${ticket_domain}</li>
<li>Nature of the request 	${ticket_type}</li>
<li>Assigning Entity / Agent 	${unit_name}</li>
<li>problematic 	${ticket_categorie}</li>
<li>Comment 	${comment}</li>
<li>Fashion Contact 	${contact_mode}</li>
<li>Phone 	${fixed_phone}</li>
<li>Cellphone 	${mobile_phone}</li>
<li>Mail 	${email}</li>
<li>seized URL 	${url_completed}</li>
<li>user message	${user_message}</li>


                </ul>
                
                <p>When performing the task NotifyGru, the provider instance provides all the necessary information to build the JSON stream.</p>
            </subsection>
            
        </section>
    </body>
</document>

